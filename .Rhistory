indicator_mods <- list(m, m1, m2)
# Extract observed, predicted, derivatives and plot for each test gam
test_gam_data <- list()
test_gam_plots <- list()
residual_plots <- list()
for (j in seq_along(indicator_mods)) {
plot.gam(indicator_mods[[j]], residuals = TRUE)
test_gam_data[[j]] <- get_test_gam_data(scenario_indicator_single[[i]],
indicator_mods[[j]])
test_gam_plots[[j]] <- plot_test_gam(test_gam_data[[j]])
}
all_mods_data[[i]] <- test_gam_plots
plots[[i]] <- plot_grid(test_gam_plots[[1]],
test_gam_plots[[2]],
test_gam_plots[[3]],
nrow = 2, align = "v")
print(plots[[i]])
ggsave(file.path(supporting_info_plots_folder, paste(scenario, indicator,
"test_gams.png",
sep = "_")),
width = t_width,
height = t_height,
units = "cm",
plots[[i]])
robust_trends[[i]] <- compare_trends(test_gam_data)
trend_years <- robust_trends[[i]] %>%
filter(positive_across_all_models == 1|
negative_across_all_models == 1)
selected_mods[[i]] <- indicator_mods[[selected]]
selected_mods_data[[i]] <- test_gam_data[[selected]]
deviance_explained[[i]] <- round(summary.gam(selected_mods[[i]])$dev.expl, 2)
}
i
scenario <- scenario_indicator_single[[i]]$scenario[1]
indicator <- scenario_indicator_single[[i]]$indicator[1]
indicator <- str_replace(indicator, "/", "_")
indicator
if (indicator == "RLI annual") {
lims <- rli_lims
} else if (indicator == "LPI") {
lims <- lpi_lims
} else {
lims <- harv_lims
}
lims
bootstrapped_data[[i]] <- bootstrap_selected_model(scenario_indicator_single[[i]],
selected_mods[[i]],
selected_mods_data[[i]], boots) %>%
merge(robust_trends[[i]], by = "annual_time_step", all = TRUE) %>%
mutate(robust_positive_trend = ifelse(positive_across_all_models == 1,
predicted,NA)) %>%
mutate(robust_negative_trend = ifelse(negative_across_all_models== 1,
predicted,NA))
bootstrapped_plots[[i]] <- plot_bootstrapped_model(bootstrapped_data[[i]],
lims)
write.csv(bootstrapped_data[[i]], file.path(analysis_outputs_folder,
paste(scenario, indicator,
"bootstrapped_trends.csv",
sep = "_")))
ggsave(file.path(manuscript_plots_folder, paste(scenario, indicator,
"bt.png",
sep = "_")),
width = 10,
height = 5,
units = "cm",
bootstrapped_plots[[i]])
bootstrapped_plots[[i]] <- bootstrapped_plots[[i]] +
labs(title = scenario)
walk(bootstrapped_plots, print)
View(bootstrapped_plots)
View(bootstrapped_data)
View(selected_mods)
View(scenario_indicator_single)
View(selected_mods_data)
View(bootstrapped_data)
i
bootstrapped_data <- list()
bootstrapped_plots <- list()
for (i in seq_along(selected_mods)) {
scenario <- scenario_indicator_single[[i]]$scenario[1]
indicator <- scenario_indicator_single[[i]]$indicator[1]
indicator <- str_replace(indicator, "/", "_")
if (indicator == "RLI annual") {
lims <- rli_lims
} else if (indicator == "LPI") {
lims <- lpi_lims
} else {
lims <- harv_lims
}
lims
bootstrapped_data[[i]] <- bootstrap_selected_model(scenario_indicator_single[[i]],
selected_mods[[i]],
selected_mods_data[[i]], boots) %>%
merge(robust_trends[[i]], by = "annual_time_step", all = TRUE) %>%
mutate(robust_positive_trend = ifelse(positive_across_all_models == 1,
predicted,NA)) %>%
mutate(robust_negative_trend = ifelse(negative_across_all_models== 1,
predicted,NA))
bootstrapped_plots[[i]] <- plot_bootstrapped_model(bootstrapped_data[[i]],
lims)
write.csv(bootstrapped_data[[i]], file.path(analysis_outputs_folder,
paste(scenario, indicator,
"bootstrapped_trends.csv",
sep = "_")))
ggsave(file.path(manuscript_plots_folder, paste(scenario, indicator,
"bt.png",
sep = "_")),
width = 10,
height = 5,
units = "cm",
bootstrapped_plots[[i]])
bootstrapped_plots[[i]] <- bootstrapped_plots[[i]] +
labs(title = scenario)
}
walk(bootstrapped_plots, print)
plot_bootstrapped_model <- function(data, ylimits){
indicator <- data$indicator[1]
boot_base_plot <- ggplot(data = data) +
geom_rect(aes(xmin = 95, xmax = 105,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4) +
geom_rect(aes(xmin = 195, xmax = 205,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4)+
geom_point(aes(x = annual_time_step, y = observed),
alpha = 0.2, size = 1) +
geom_line(aes(x = annual_time_step, y = observed),
alpha = 0.2) +
geom_line(aes(x = annual_time_step, y = predicted)) +
geom_ribbon(aes(x = annual_time_step, ymin = predicted_lower,
ymax = predicted_upper),
alpha = 0.3) +
labs(x = "Time (years)",
y = indicator) +
geom_vline(xintercept=c(100,200), linetype = "dotted") +
coord_cartesian(ylim = ylimits)
# + annotate("text", x = 295, y = 1.1,
#            label = paste("Dev. explained =",
#                          dev_explained,sep = " "),
#            size = 4)
if(all(is.na(data$positive_trend))) {
boot_plot <-  boot_base_plot +
geom_line(aes(x = annual_time_step, y = negative_trend),
col = "#440154FF") +
plot_theme
} else if(all(is.na(data$robust_positive_trend))) {
boot_plot <- boot_base_plot +
geom_line(aes(x = annual_time_step, y = positive_trend), col = "#2A788EFF") +
geom_line(aes(x = annual_time_step, y = negative_trend), col = "#440154FF") +
geom_line(aes(x = annual_time_step, y = robust_negative_trend),
col = "#440154FF", size = 2) +
plot_theme
} else if (all(is.na(data$robust_negative_trend))) {
boot_plot <- boot_base_plot +
geom_line(aes(x = annual_time_step, y = positive_trend), col = "#2A788EFF") +
geom_line(aes(x = annual_time_step, y = negative_trend), col = "#440154FF") +
geom_line(aes(x = annual_time_step, y = robust_positive_trend),
col = "#2A788EFF", size = 2) +
plot_theme
} else {
boot_plot <- boot_base_plot +
geom_line(aes(x = annual_time_step, y = positive_trend), col = "#2A788EFF") +
geom_line(aes(x = annual_time_step, y = negative_trend), col = "#440154FF") +
geom_line(aes(x = annual_time_step, y = robust_positive_trend),
col = "#2A788EFF", size = 2) +
geom_line(aes(x = annual_time_step, y = robust_negative_trend),
col = "#440154FF", size = 2) +
plot_theme
return(boot_plot)
}
}
bootstrapped_data <- list()
bootstrapped_plots <- list()
for (i in seq_along(selected_mods)) {
scenario <- scenario_indicator_single[[i]]$scenario[1]
indicator <- scenario_indicator_single[[i]]$indicator[1]
indicator <- str_replace(indicator, "/", "_")
if (indicator == "RLI annual") {
lims <- rli_lims
} else if (indicator == "LPI") {
lims <- lpi_lims
} else {
lims <- harv_lims
}
lims
bootstrapped_data[[i]] <- bootstrap_selected_model(scenario_indicator_single[[i]],
selected_mods[[i]],
selected_mods_data[[i]], boots) %>%
merge(robust_trends[[i]], by = "annual_time_step", all = TRUE) %>%
mutate(robust_positive_trend = ifelse(positive_across_all_models == 1,
predicted,NA)) %>%
mutate(robust_negative_trend = ifelse(negative_across_all_models== 1,
predicted,NA))
bootstrapped_plots[[i]] <- plot_bootstrapped_model(bootstrapped_data[[i]],
lims)
write.csv(bootstrapped_data[[i]], file.path(analysis_outputs_folder,
paste(scenario, indicator,
"bootstrapped_trends.csv",
sep = "_")))
ggsave(file.path(manuscript_plots_folder, paste(scenario, indicator,
"bt.png",
sep = "_")),
width = 10,
height = 5,
units = "cm",
bootstrapped_plots[[i]])
bootstrapped_plots[[i]] <- bootstrapped_plots[[i]] +
labs(title = scenario)
}
i
j
View(scenario_indicator_single)
data <- scenario_indicator_single[[i]]
indicator <- data$indicator[1]
boot_base_plot <- ggplot(data = data) +
geom_rect(aes(xmin = 95, xmax = 105,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4) +
geom_rect(aes(xmin = 195, xmax = 205,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4)+
geom_point(aes(x = annual_time_step, y = observed),
alpha = 0.2, size = 1) +
geom_line(aes(x = annual_time_step, y = observed),
alpha = 0.2) +
geom_line(aes(x = annual_time_step, y = predicted)) +
geom_ribbon(aes(x = annual_time_step, ymin = predicted_lower,
ymax = predicted_upper),
alpha = 0.3) +
labs(x = "Time (years)",
y = indicator) +
geom_vline(xintercept=c(100,200), linetype = "dotted") +
coord_cartesian(ylim = ylimits)
scenario <- scenario_indicator_single[[i]]$scenario[1]
indicator <- scenario_indicator_single[[i]]$indicator[1]
indicator <- str_replace(indicator, "/", "_")
if (indicator == "RLI annual") {
lims <- rli_lims
} else if (indicator == "LPI") {
lims <- lpi_lims
} else {
lims <- harv_lims
}
lims
indicator <- data$indicator[1]
boot_base_plot <- ggplot(data = data) +
geom_rect(aes(xmin = 95, xmax = 105,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4) +
geom_rect(aes(xmin = 195, xmax = 205,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4)+
geom_point(aes(x = annual_time_step, y = observed),
alpha = 0.2, size = 1) +
geom_line(aes(x = annual_time_step, y = observed),
alpha = 0.2) +
geom_line(aes(x = annual_time_step, y = predicted)) +
geom_ribbon(aes(x = annual_time_step, ymin = predicted_lower,
ymax = predicted_upper),
alpha = 0.3) +
labs(x = "Time (years)",
y = indicator) +
geom_vline(xintercept=c(100,200), linetype = "dotted") +
coord_cartesian(ylim = ylimits)
ylimits <- lims
indicator <- data$indicator[1]
boot_base_plot <- ggplot(data = data) +
geom_rect(aes(xmin = 95, xmax = 105,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4) +
geom_rect(aes(xmin = 195, xmax = 205,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4)+
geom_point(aes(x = annual_time_step, y = observed),
alpha = 0.2, size = 1) +
geom_line(aes(x = annual_time_step, y = observed),
alpha = 0.2) +
geom_line(aes(x = annual_time_step, y = predicted)) +
geom_ribbon(aes(x = annual_time_step, ymin = predicted_lower,
ymax = predicted_upper),
alpha = 0.3) +
labs(x = "Time (years)",
y = indicator) +
geom_vline(xintercept=c(100,200), linetype = "dotted") +
coord_cartesian(ylim = ylimits)
boot_base_plot
View(data)
data <- bootstrapped_data[[i]]
indicator <- data$indicator[1]
boot_base_plot <- ggplot(data = data) +
geom_rect(aes(xmin = 95, xmax = 105,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4) +
geom_rect(aes(xmin = 195, xmax = 205,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4)+
geom_point(aes(x = annual_time_step, y = observed),
alpha = 0.2, size = 1) +
geom_line(aes(x = annual_time_step, y = observed),
alpha = 0.2) +
geom_line(aes(x = annual_time_step, y = predicted)) +
geom_ribbon(aes(x = annual_time_step, ymin = predicted_lower,
ymax = predicted_upper),
alpha = 0.3) +
labs(x = "Time (years)",
y = indicator) +
geom_vline(xintercept=c(100,200), linetype = "dotted") +
coord_cartesian(ylim = ylimits)
boot_base_plot
indicator <- data$indicator[1]
boot_base_plot <- ggplot(data = data) +
geom_rect(aes(xmin = 95, xmax = 105,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4) +
geom_rect(aes(xmin = 195, xmax = 205,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4)+
geom_point(aes(x = annual_time_step, y = observed),
alpha = 0.2, size = 1) +
geom_line(aes(x = annual_time_step, y = observed),
alpha = 0.2) +
geom_line(aes(x = annual_time_step, y = predicted)) +
geom_ribbon(aes(x = annual_time_step, ymin = predicted_lower,
ymax = predicted_upper),
alpha = 0.3)
boot_base_plot
selected_mods_all <- selected_mods
selected_mods <- selected_mods_all[4:12]
bootstrapped_data <- list()
bootstrapped_plots <- list()
for (i in seq_along(selected_mods)) {
scenario <- scenario_indicator_single[[i]]$scenario[1]
indicator <- scenario_indicator_single[[i]]$indicator[1]
indicator <- str_replace(indicator, "/", "_")
if (indicator == "RLI annual") {
lims <- rli_lims
} else if (indicator == "LPI") {
lims <- lpi_lims
} else {
lims <- harv_lims
}
lims
bootstrapped_data[[i]] <- bootstrap_selected_model(scenario_indicator_single[[i]],
selected_mods[[i]],
selected_mods_data[[i]], boots) %>%
merge(robust_trends[[i]], by = "annual_time_step", all = TRUE) %>%
mutate(robust_positive_trend = ifelse(positive_across_all_models == 1,
predicted,NA)) %>%
mutate(robust_negative_trend = ifelse(negative_across_all_models== 1,
predicted,NA))
bootstrapped_plots[[i]] <- plot_bootstrapped_model(bootstrapped_data[[i]],
lims)
write.csv(bootstrapped_data[[i]], file.path(analysis_outputs_folder,
paste(scenario, indicator,
"bootstrapped_trends.csv",
sep = "_")))
ggsave(file.path(manuscript_plots_folder, paste(scenario, indicator,
"bt.png",
sep = "_")),
width = 10,
height = 5,
units = "cm",
bootstrapped_plots[[i]])
bootstrapped_plots[[i]] <- bootstrapped_plots[[i]] +
labs(title = scenario)
}
i
plot_bootstrapped_model <- function(data, ylimits){
indicator <- data$indicator[1]
indicator <- str_replace(indicator, "/", "_")
# Calculate turning points
derivs_2_fun <- splinefun(x = data$annual_time_step, y =data$predicted)
derivs_2 <- derivs_2_fun(data$annual_time_step, deriv = 2)
inflection_points <- diff(sign(derivs_2))
inflection_points <- c(0, inflection_points)
data <- cbind(data, inflection_points) %>%
mutate(inflection_points = ifelse(inflection_points != 0, predicted,
NA))
boot_base_plot <- ggplot(data = data) +
geom_rect(aes(xmin = 95, xmax = 105,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4) +
geom_rect(aes(xmin = 195, xmax = 205,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4)+
geom_point(aes(x = annual_time_step, y = observed),
alpha = 0.2, size = 1) +
# geom_point(aes(x = annual_time_step, y = inflection_points),
#                      shape = 8, size = 3) +
geom_line(aes(x = annual_time_step, y = observed),
alpha = 0.2) +
geom_line(aes(x = annual_time_step, y = predicted)) +
geom_ribbon(aes(x = annual_time_step, ymin = predicted_lower,
ymax = predicted_upper),
alpha = 0.3) +
labs(x = "Time (years)",
y = indicator) +
geom_vline(xintercept=c(100,200), linetype = "dotted") +
coord_cartesian(ylim = ylimits)
if(all(is.na(data$robust_positive_trend)) &
all(is.na(data$robust_negative_trend)) &
all(is.na(data$positive_trend)) &
all(is.na(data$negative_trend))) {
boot_plot <-  boot_base_plot +
plot_theme
} else if (all(is.na(data$robust_positive_trend)) &
all(is.na(data$robust_negative_trend)) &
!all(is.na(data$positive_trend)) &
!all(is.na(data$negative_trend))) {
boot_plot <-  boot_base_plot +
geom_line(aes(x = annual_time_step, y = positive_trend), col = "#2A788EFF") +
geom_line(aes(x = annual_time_step, y = negative_trend), col = "#440154FF") +
plot_theme
} else if (all(is.na(data$robust_positive_trend)) &
all(is.na(data$robust_negative_trend)) &
all(is.na(data$positive_trend)) &
!all(is.na(data$negative_trend))) {
boot_plot <-  boot_base_plot +
geom_line(aes(x = annual_time_step, y = negative_trend),
col = "#440154FF") +
plot_theme
} else if (all(is.na(data$robust_positive_trend)) &
all(is.na(data$robust_negative_trend)) &
all(is.na(data$negative_trend)) &
!all(is.na(data$positive_trend))) {
boot_plot <-  boot_base_plot +
geom_line(aes(x = annual_time_step, y = positive_trend),
col = "#2A788EFF") +
plot_theme
} else if (all(is.na(data$robust_positive_trend)) &
!all(is.na(data$robust_negative_trend)) &
!all(is.na(data$positive_trend)) &
!all(is.na(data$negative_trend))) {
boot_plot <- boot_base_plot +
geom_line(aes(x = annual_time_step, y = positive_trend), col = "#2A788EFF") +
geom_line(aes(x = annual_time_step, y = negative_trend), col = "#440154FF") +
geom_line(aes(x = annual_time_step, y = robust_negative_trend),
col = "#440154FF", size = 2) +
plot_theme
} else if (all(is.na(data$robust_negative_trend)) &
!all(is.na(data$robust_positive_trend)) &
!all(is.na(data$positive_trend)) &
!all(is.na(data$negative_trend))) {
boot_plot <- boot_base_plot +
geom_line(aes(x = annual_time_step, y = positive_trend), col = "#2A788EFF") +
geom_line(aes(x = annual_time_step, y = negative_trend), col = "#440154FF") +
geom_line(aes(x = annual_time_step, y = robust_positive_trend),
col = "#2A788EFF", size = 2) +
plot_theme
} else if (!all(is.na(data$robust_negative_trend)) &
!all(is.na(data$robust_positive_trend)) &
!all(is.na(data$positive_trend)) &
!all(is.na(data$negative_trend))) {
boot_plot <- boot_base_plot +
geom_line(aes(x = annual_time_step, y = positive_trend), col = "#2A788EFF") +
geom_line(aes(x = annual_time_step, y = negative_trend), col = "#440154FF") +
geom_line(aes(x = annual_time_step, y = robust_positive_trend),
col = "#2A788EFF", size = 2) +
geom_line(aes(x = annual_time_step, y = robust_negative_trend),
col = "#440154FF", size = 2) +
plot_theme
return(boot_plot)
}
}
data <- bootstrapped_data[[i]]
ylimits <- lims
indicator <- data$indicator[1]
indicator <- str_replace(indicator, "/", "_")
# Calculate turning points
derivs_2_fun <- splinefun(x = data$annual_time_step, y =data$predicted)
derivs_2 <- derivs_2_fun(data$annual_time_step, deriv = 2)
inflection_points <- diff(sign(derivs_2))
inflection_points <- c(0, inflection_points)
data <- cbind(data, inflection_points) %>%
mutate(inflection_points = ifelse(inflection_points != 0, predicted,
NA))
boot_base_plot <- ggplot(data = data) +
geom_rect(aes(xmin = 95, xmax = 105,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4) +
geom_rect(aes(xmin = 195, xmax = 205,
ymin = -Inf, ymax = Inf), fill = "grey70",
alpha = 0.4)+
geom_point(aes(x = annual_time_step, y = observed),
alpha = 0.2, size = 1) +
# geom_point(aes(x = annual_time_step, y = inflection_points),
#                      shape = 8, size = 3) +
geom_line(aes(x = annual_time_step, y = observed),
alpha = 0.2) +
geom_line(aes(x = annual_time_step, y = predicted)) +
geom_ribbon(aes(x = annual_time_step, ymin = predicted_lower,
ymax = predicted_upper),
alpha = 0.3) +
labs(x = "Time (years)",
y = indicator) +
geom_vline(xintercept=c(100,200), linetype = "dotted") +
coord_cartesian(ylim = ylimits)
boot_base_plot
indicator
scenario
View(data)
hamin <- min(bootstrapped_data[[i]]$observed)
hamax <- max(bootstrapped_data[[i]]$observed)
lims <- c(hamin,hamax)
bootstrapped_plots[[i]] <- plot_bootstrapped_model(bootstrapped_data[[i]],
lims)
lims
ind_method <- "GCV.Cp"
selected <- 1
all_mods_data <- list()
selected_mods <- list()
selected_mods_data <- list()
